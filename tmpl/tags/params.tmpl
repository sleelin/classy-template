<?js
    var self = this;

    // Sort subparams under their parent params (like opts.classname)
    var parentParam = null;
    obj.forEach(function (param, i) {
        var paramRegExp;

        if (!param) return;
        if (parentParam && parentParam.name && param.name) {
            try {
                paramRegExp = new RegExp("^(?:" + parentParam.name + "(?:\\[\\])*)\\.(.+)$");
            } catch (e) {
                // There's probably a typo in the JSDoc comment that resulted in a weird parameter name
                return;
            }

            if (paramRegExp.test(param.name)) {
                param.name = RegExp.$1;
                parentParam.subparams = parentParam.subparams || [];
                parentParam.subparams.push(param);
                obj[i] = null;
            } else {
                parentParam = param;
            }
        } else {
            parentParam = param;
        }
    });

    // Determine if we need extra columns, "attributes" and "default"
    obj.hasAttributes = false;
    obj.hasDefault = false;
    obj.hasName = false;

    obj.forEach(function (param) {
        if (!param) return;
        if (param.optional || param.nullable || param.variable) obj.hasAttributes = true;
        if (param.name) obj.hasName = true;
        if (typeof param.defaultvalue !== "undefined") obj.hasDefault = true;
    });
?>

<table class="params">
    <thead>
        <tr>
            <?js if (obj.hasName) { ?><th>Name</th><?js } ?>
            <th>Type</th>
            <?js if (obj.hasDefault) { ?><th>Default</th><?js } ?>
            <th class="last">Description</th>
        </tr>
    </thead>
    <tbody>
    <?js
    obj.forEach(function(param) {
        if (!param) return;
    ?>
        <tr>
            <?js if (obj.hasName) { ?>
                <td class="name">
                    <code>
                        <?js= (param.variable ? `&hellip;${param.name}` : param.name) ?><span class="signature-attributes"><?js= [...(param.optional ? ["opt"] : []), ...(param.nullable ? ["nullable"] : [])].join(", ") ?></span>
                    </code>
                </td>
            <?js } ?>
            <td class="type">
                <?js if (param.type && param.type.names) { ?><?js= self.partial("tags/type.tmpl", param.type.names) ?><?js } ?>
            </td>

            <?js if (obj.hasDefault) { ?>
                <td class="default">
                    <?js if (typeof param.defaultvalue !== "undefined") { ?><?js= self.htmlsafe(param.defaultvalue) ?><?js } ?>
                </td>
            <?js } ?>

            <td class="description last">
                <?js= param.description ?>
                <?js if (param.subparams) { ?>
                    <h6>Properties</h6>
                    <?js= self.partial("tags/params.tmpl", param.subparams) ?>
                <?js } ?>
            </td>
        </tr>
    <?js }); ?>
    </tbody>
</table>
